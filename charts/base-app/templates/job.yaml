# Job Template
# Creates a Kubernetes Job for a one-time batch task if enabled.
{{- if .Values.job.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "base-app.fullname" . }}-job
  labels:
    {{ include "base-app.labels" . | nindent 4 }}
spec:
  backoffLimit: {{ .Values.job.backoffLimit }}
  completions: {{ .Values.job.completions }}
  parallelism: {{ .Values.job.parallelism }}
  template:
    metadata:
      labels:
        {{ include "base-app.labels" . | nindent 8 }}
    spec:
      restartPolicy: {{ .Values.job.restartPolicy }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{ toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      serviceAccountName: {{- if .Values.serviceAccount.create }}{{ .Values.serviceAccount.name | default (include "base-app.fullname" .) }}{{- else if .Values.serviceAccount.name }}{{ .Values.serviceAccount.name }}{{- end }}
      containers:
        - name: job
          image: "{{ .Values.job.image.repository | default .Values.image.repository }}:{{ .Values.job.image.tag | default .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.job.command }}
          command:
            {{ toYaml .Values.job.command | nindent 12 }}
          {{- end }}
          {{- if .Values.job.args }}
          args:
            {{ toYaml .Values.job.args | nindent 12 }}
          {{- end }}
          {{- if .Values.job.env }}
          env:
            {{- range .Values.job.env }}
            - name: {{ .name }}
              value: {{ quote .value }}
            {{- end }}
          {{- end }}
          {{- if .Values.envFrom }}
          envFrom:
            {{- range .Values.envFrom }}
            - {{- if .configMapRef }}
              configMapRef:
                name: {{ .configMapRef.name }}
              {{- else if .secretRef }}
              secretRef:
                name: {{ .secretRef.name }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if or .Values.persistence.enabled .Values.azureKeyVault.enabled }}
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: {{ .Values.persistence.name }}
              mountPath: {{ .Values.persistence.mountPath }}
            {{- end }}
            {{- if .Values.azureKeyVault.enabled }}
            - name: secrets-store
              mountPath: {{ .Values.azureKeyVault.mountPath }}
              readOnly: true
            {{- end }}
          {{- end }}
      {{- if or .Values.azureKeyVault.enabled .Values.persistence.enabled }}
      volumes:
        {{- if .Values.azureKeyVault.enabled }}
        - name: secrets-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "base-app.fullname" . }}-azure-kv
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: {{ .Values.persistence.name }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{ else }}{{ include "base-app.fullname" . }}-{{ .Values.persistence.name }}{{ end }}
        {{- end }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{ toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{ toYaml .Values.affinity | nindent 8 }}
      {{- end }}
{{- end }}
